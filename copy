
const express = require('express');
const router = express.Router();
const supabase = require('../supabaseClient');

// إنشاء مستخدم جديد في supabase auth ثم إضافته كمدير عام
// body: { email, password, full_name }
router.post('/add-admin', async (req, res) => {
  const { email, password, full_name } = req.body;
  if (!email || !password || !full_name) {
    return res.status(400).json({ error: 'يرجى إدخال جميع البيانات المطلوبة.' });
  }
  // إنشاء مستخدم جديد في supabase auth
  const { data: userData, error: signUpError } = await supabase.auth.admin.createUser({
    email,
    password,
    email_confirm: true
  });
  if (signUpError) {
    return res.status(500).json({ error: signUpError.message });
  }
  const user = userData.user;
  // إضافة المدير العام في جدول admins بدور 'main'
  const { data, error } = await supabase.from('admins').insert([
    {
      id: user.id,
      full_name,
      email,
      role: 'main',
      created_by: null,
      permissions: null
    }
  ]).select();
  if (error) {
    return res.status(500).json({ error: error.message });
  }
  res.json({ message: 'تم إنشاء المدير العام بنجاح', data });
});


router.post('/login-admin', async (req, res) => {
  const { email, password } = req.body;
  if (!email || !password) {
    return res.status(400).json({ error: 'يرجى إدخال البريد الإلكتروني وكلمة المرور.' });
  }
  // تسجيل الدخول للمستخدم
  const { data, error } = await supabase.auth.signInWithPassword({
    email,
    password
  });
  if (error) {
    return res.status(401).json({ error: 'فشل تسجيل الدخول. يرجى التحقق من البريد الإلكتروني وكلمة المرور.' });
  }
  res.json({ message: 'تم تسجيل الدخول بنجاح', user: data.user });
});

module.exports = router;
